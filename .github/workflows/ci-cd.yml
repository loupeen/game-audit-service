name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.x'
  AWS_REGION: 'eu-north-1'

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run typecheck

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: CDK Synth (validation)
      run: npm run synth

    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for outdated packages
      run: npx ncu --doctor --fail

  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    environment: test
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_TEST }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GameAuditServiceDeployment

    - name: CDK Bootstrap (if needed)
      run: npx cdk bootstrap --context environment=test

    - name: CDK Deploy to Test
      run: npx cdk deploy --context environment=test --require-approval never

    - name: Run integration tests
      run: |
        echo "Integration tests would run here"
        # npm run test:integration

  deploy-qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: deploy-test
    if: github.ref == 'refs/heads/main'
    environment: qa
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_QA }}
        aws-region: us-east-1
        role-session-name: GameAuditServiceDeployment

    - name: CDK Bootstrap (if needed)
      run: npx cdk bootstrap --context environment=qa --context region=us-east-1

    - name: CDK Deploy to QA
      run: npx cdk deploy --context environment=qa --context region=us-east-1 --require-approval never

    - name: Run QA tests
      run: |
        echo "QA tests would run here"
        # npm run test:qa