name: CDK Service Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        type: choice
        options:
          - test
          - qa
          - production
      stack:
        description: 'Stack to deploy (leave empty for all)'
        required: false
        type: string

permissions:
  contents: read
  packages: read
  id-token: write  # For OIDC authentication to AWS

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    name: Test & Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run typecheck

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: CDK Synth (validation)
      run: npm run synth
      env:
        CI: true

    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

  deploy-test:
    name: Deploy to Test
    needs: [test]
    if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: test
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_TEST }}
        aws-region: 'eu-north-1'
        role-session-name: GameAuditServiceDeployment

    - name: CDK Bootstrap (if needed)
      run: npx cdk bootstrap --context environment=test

    - name: CDK Diff
      run: npx cdk diff --context environment=test

    - name: CDK Deploy to Test
      run: npx cdk deploy --context environment=test --require-approval never

  deploy-qa:
    name: Deploy to QA
    needs: [test, security]
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'qa')
    runs-on: ubuntu-latest
    environment: qa
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_QA }}
        aws-region: 'us-east-1'
        role-session-name: GameAuditServiceDeployment

    - name: CDK Bootstrap (if needed)
      run: npx cdk bootstrap --context environment=qa --context region=us-east-1

    - name: CDK Diff
      run: npx cdk diff --context environment=qa --context region=us-east-1

    - name: CDK Deploy to QA
      run: npx cdk deploy --context environment=qa --context region=us-east-1 --require-approval never

  deploy-production:
    name: Deploy to Production
    needs: [deploy-qa]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
        aws-region: 'us-east-1'
        role-session-name: GameAuditServiceDeployment

    - name: CDK Bootstrap (if needed)
      run: npx cdk bootstrap --context environment=production --context region=us-east-1

    - name: CDK Diff
      run: npx cdk diff --context environment=production --context region=us-east-1

    - name: CDK Deploy to Production
      run: npx cdk deploy --context environment=production --context region=us-east-1 --require-approval never

  integration-tests:
    name: Integration Tests
    needs: [deploy-test]
    if: success() && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run integration tests
      run: |
        echo "Running integration tests against test environment"
        # npm run test:integration